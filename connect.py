#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
import traceback,time,math,urllib3

LOGFILE="connect.log"
LOGLEVEL=("DEBUG","INFO","WARNING","ERROR","FATAL")

def log(msg,l=1,end="\n",logfile=LOGFILE):
    st=traceback.extract_stack()[-2]
    lstr=LOGLEVEL[l]
    now_str="%s %03d"%(time.strftime("%y/%m/%d %H:%M:%S",time.localtime()),math.modf(time.time())[0]*1000)
    if l<3:
        tempstr="%s [%s,%s:%d] %s%s"%(now_str,lstr,st.name,st.lineno,str(msg),end)
    else:
        tempstr="%s [%s,%s:%d] %s:\n%s%s"%(now_str,lstr,st.name,st.lineno,str(msg),traceback.format_exc(limit=5),end)
    print(tempstr,end="")
    if l>=1:
        with open(logfile,"a") as f:
            f.write(tempstr)

import requests,sys,json

def net_login(username,password_hash,href="net"):
    """
        request: http://net.tsinghua.edu.cn/do_login.php
        method: POST
        post data:
            action: login
            username: username
            password: {MD5_HEX}32_bit_hex
            ac_id: 1
    """
    if href=="net":
        url='http://net.tsinghua.edu.cn/do_login.php'
    elif href=="auth4":
        url="http://auth4.tsinghua.edu.cn/index_161.html"
    else:
        log("href (%s) illegal, using net.tsinghua..."%(href))
        url='http://net.tsinghua.edu.cn/do_login.php'
    #url='http://auth4.tsinghua.edu.cn/index_161.html'
    headers={"Accept":"*/*","Host":"net.tsinghua.edu.cn",
             "User-Agent":"Mozilla/5.0","Accept-Encoding":"gzip, deflate","Accept-Language":"zh;q=0.9,en;q=0.8"}
    data={'action':'login','username':username,'password':password_hash,'ac_id':'1'}
    log("posting: %s"%(url))
    try:
        urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
        post=requests.post(url,headers=headers,data=data,timeout=10,verify=False,allow_redirects=True)
        content=post.content.decode("gbk") # post.encoding is "ISO-8859-1" but it is wrong
        log('%d: "%s"'%(post.status_code,content))
    except Exception as e:
        log("error happened: %s"%(e),l=2)

def test_network(test_url,forbid_word="Tsinghua University Network"):
    """
        test by getting test_url
        some times tsinghua will return its net login page and the status_code is still 200
        so forbid_word have to be made sure not in the reply content
    """
    try:
        headers={"Accept":"*/*"}
        log("getting: %s"%(test_url))
        get=requests.get(test_url,headers=headers,timeout=10)
        if get.status_code==200:
            content=get.content.decode(get.encoding)
            if forbid_word in content:
                #not sure working or not
                # the 555 is chosen such that the forbid_word will show if qsinghua's net page is returned
                return "get.status_code=%d but forbid_word '%s' in content:\n%s"%(get.status_code,forbid_word,content[0:min(555,len(content))])
            elif "auth4.tsinghua.edu.cn" in content:
                log("get 'auth4.tsinghua.edu.cn' returned",l=2)
                return 1
            else:
                return 0
        else:
            return "get.status_code=%d"%(get.status_code,)
    except Exception as e:
        return str(e)

def test_and_reconnent(username,password_hash):
    """test online or not, if not, login"""
    import random
    url_pool=["https://baidu.com","https://bing.com","https://github.com","http://baidu.com","http://bing.com","http://github.com"]
    #url_pool=["http://net.tsinghua.edu.cn",] # for debugging
    test_re=test_network(random.choice(url_pool))
    if test_re==0:
        log("online already")
    elif test_re==1:
        net_login(username,password_hash,href="auth4")
    else:
        log("not online, reconnecting...\nreason: %s"%(test_re))
        net_login(username,password_hash)

def gen_config():
    import getpass,hashlib
    username=input("username: ")
    password=getpass.getpass("password: ")
    password_hash='{MD5_HEX}'+hashlib.md5(password.encode('latin1')).hexdigest()
    with open("config.json","w") as f:
        config=json.dump({"username":username,"password_hash":password_hash},f)
    log("dumped username and password's hash to config.json")

if __name__ == '__main__':
    help_msg="Tsinghua Tunet auto-connect script\n--test-first\n--connect\n--gen-config"
    if len(sys.argv)>=2 and (sys.argv[1]=="--test-first" or sys.argv[1]=="--connect"):
        try:
            with open("config.json","r") as f:
                config=json.load(f)
            username=config["username"]
            password_hash=config["password_hash"]
        except:
            log("load config.json failed. make sure a config file is generated by --gen-config")
        else:
            if sys.argv[1]=="--test-first":
                test_and_reconnent(username,password_hash)
            elif sys.argv[1]=="--connect":
                net_login(username,password_hash)
            else:
                log(help_msg)
    elif len(sys.argv)>=2 and sys.argv[1]=="--gen-config":
        gen_config()
    else:
        log(help_msg)
